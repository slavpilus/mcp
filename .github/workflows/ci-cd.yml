name: CI/CD Pipeline

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main]

env:
  PYTHON_VERSION: "3.10"

jobs:
  lint-and-format:
    name: Lint and Format Check
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      - name: Cache pip packages
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements-dev.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements-dev.txt

      - name: Check formatting with Black
        run: black --check .

      - name: Check import sorting with isort
        run: isort --check-only .

      - name: Lint with Ruff
        run: ruff check .

      - name: Type check with mypy
        run: mypy mcp_server main.py

  test:
    name: Run Tests
    runs-on: ubuntu-latest
    needs: lint-and-format

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      - name: Cache pip packages
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements-dev.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements-dev.txt

      - name: Run tests with pytest
        run: |
          pytest --cov=mcp_server --cov=main --cov-report=term-missing --cov-report=xml

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@main
        with:
          verbose: true
          fail_ci_if_error: true
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}

  deploy-to-huggingface:
    name: Deploy to Hugging Face Space
    runs-on: ubuntu-latest
    needs: test
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          lfs: true

      - name: Create Hugging Face Space config
        run: |
          # Create space configuration for Hugging Face
          cat > README.md << EOF
          ---
          title: Enneagora - E-commerce MCP Server
          emoji: 🛒
          colorFrom: blue
          colorTo: purple
          sdk: docker
          pinned: false
          suggested_hardware: cpu-basic
          suggested_storage: small
          ---

          # Enneagora - E-commerce MCP Server

          Enneagora - MCP-compliant server for e-commerce customer support.

          ## MCP Endpoint

          Connect to this MCP server at: \`https://your-space.hf.space/sse\`

          ## Available Tools

          - get_order_status
          - cancel_order
          - process_return
          - track_package
          - get_support_info
          EOF

      - name: Create Hugging Face requirements
        run: |
          # Copy requirements for Hugging Face
          cp requirements.txt requirements_hf.txt

          # Add Hugging Face specific dependencies if needed
          echo "# Hugging Face deployment" >> requirements_hf.txt

      - name: Push to Hugging Face Space
        env:
          HF_TOKEN: ${{ secrets.HF_TOKEN }}
        run: |
          # Configure git for Hugging Face
          git config --global user.email "action@github.com"
          git config --global user.name "GitHub Action"

          # Add Hugging Face remote
          git remote add space \
            https://${{ secrets.HF_USERNAME }}:${{ secrets.HF_TOKEN }}@huggingface.co/spaces/${{ secrets.HF_USERNAME }}/${{ secrets.HF_SPACE_NAME }}

          # Create environment file for Hugging Face
          cat > .env << EOF
          ENVIRONMENT=production
          EOF

          # Add and commit Hugging Face specific files
          git add README.md requirements_hf.txt .env Dockerfile
          git commit -m "Deploy Enneagora MCP server to Hugging Face" || echo "No changes to commit"

          # Push to Hugging Face Space
          git push --force space main

          echo "✅ Deployed to Hugging Face Space!"
          echo "🌐 Visit: https://huggingface.co/spaces/${{ secrets.HF_USERNAME }}/${{ secrets.HF_SPACE_NAME }}"
